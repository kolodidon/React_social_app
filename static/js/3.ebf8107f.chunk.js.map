{"version":3,"sources":["components/Dialogs/Dialogs.module.scss","components/Dialogs/Contacts/Contacts.module.scss","components/Dialogs/Contacts/Contact/Contact.module.scss","components/Dialogs/Messages/WriteMessage/WriteMessage.module.scss","components/Dialogs/Messages/MessageList/Message/Message.module.scss","components/Dialogs/Contacts/Contact/Contact.js","components/Dialogs/Contacts/Contacts.js","components/Dialogs/Messages/MessageList/Message/Message.js","components/Dialogs/Messages/WriteMessage/WriteMessage.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","Contact","props","className","s","contact","contactImage","src","avatar","alt","to","id","name","Contacts","contactsElements","contactData","map","contacts","Message","message","text","MessageForm","validationSchema","yup","shape","required","initialValues","onSubmit","values","resetForm","onAddMessage","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","writeMessage","writeMessageTextarea","placeholder","onChange","onBlur","value","writeMessageButton","disabled","onClick","type","error","WriteMessage","messageElements","messageData","messagesList","Dialogs","isAuth","dialogsWrapper","messages","newMessageText","compose","connect","state","messagesPage","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"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","file":"static/js/3.ebf8107f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__1J6-q\",\"messages\":\"Dialogs_messages__1J3nn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__zYElz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__2vCpC\",\"contactActive\":\"Contact_contactActive__1mhSm\",\"contactImage\":\"Contact_contactImage__2AQ9y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"writeMessage\":\"WriteMessage_writeMessage__3lzIj\",\"writeMessageTextarea\":\"WriteMessage_writeMessageTextarea__1wU4N\",\"writeMessageButton\":\"WriteMessage_writeMessageButton__33GGU\",\"messagesList\":\"WriteMessage_messagesList__1xpvr\",\"error\":\"WriteMessage_error__1IFvF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3Irgf\"};","import React from 'react'\r\nimport s from './Contact.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Contact = (props) => {\r\n    return(\r\n        <div className={s.contact}>\r\n            <img className={s.contactImage} src={props.avatar} alt=\"Avatar\"/><NavLink to = {\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport s from './Contacts.module.scss'\r\nimport Contact from \"./Contact/Contact\";\r\n\r\nconst Contacts = (props) => {\r\n\r\n    let contactsElements = props.contactData.map( contact => <Contact key={contact.id} id={contact.id} name={contact.name} avatar={contact.avatar}/>)\r\n\r\n    return(\r\n        <div className={s.contacts}>\r\n            { contactsElements }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\nimport s from './Message.module.scss'\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <span className={s.message}>{props.text}</span>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport s from './WriteMessage.module.scss'\r\nimport Message from \"../MessageList/Message/Message\"\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup'\r\n\r\nconst WriteMessage = (props) => {\r\n\r\n    let messageElements = props.messageData.map(message => <Message key={message.id} id={message.id} text={message.text} />)\r\n\r\n    return (\r\n        <>\r\n            <div className={s.messagesList}>\r\n                {messageElements}\r\n            </div>\r\n\r\n            <MessageForm\r\n                onAddMessage={props.onAddMessage}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nconst MessageForm = (props) => {\r\n    const validationSchema = yup.object().shape({\r\n        message: yup.string().required('First type your message'),\r\n    })\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                message: ''\r\n            }}\r\n            onSubmit={( values, {resetForm} ) => {\r\n                props.onAddMessage(values.message)\r\n                resetForm({ values: '' })\r\n            }}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\r\n                <form className={s.writeMessage}>\r\n                    <textarea\r\n                        className={s.writeMessageTextarea}\r\n                        placeholder='Type your message...'\r\n                        name={\"message\"}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.message}\r\n                    />\r\n\r\n                    <button\r\n                        className={s.writeMessageButton}\r\n                        disabled={!isValid && !dirty}\r\n                        onClick={handleSubmit}\r\n                        type={'submit'}\r\n                    >Send\r\n                    </button>\r\n\r\n                    {touched.message && errors.message && <p className={s.error}>{errors.message}</p>}\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default WriteMessage","import React from 'react'\r\nimport s from './Dialogs.module.scss'\r\nimport Contacts from \"./Contacts/Contacts\";\r\nimport WriteMessage from \"./Messages/WriteMessage/WriteMessage\"\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={s.dialogsWrapper}>\r\n\r\n            <Contacts contactData={props.contactData}/>\r\n\r\n            <div className = {s.messages}>\r\n                <WriteMessage \r\n                    messageData={props.messageData} \r\n                    newMessageText={props.newMessageText} \r\n                    onAddMessage={props.onAddMessage}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport Dialogs from './Dialogs'\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\nimport { compose } from \"redux\";\n\n\n\nlet mapStateToProps = (state) => {\n    return {\n        newMessageText: state.messagesPage.newMessageText,\n        messageData: state.messagesPage.messageData,\n        contactData: state.messagesPage.contactData,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        onAddMessage: (text) => {\n            dispatch(addMessageActionCreator(text));\n        }\n    }\n}\n\nexport default compose( connect(mapStateToProps, mapDispatchToProps), withAuthRedirect )(Dialogs)"],"sourceRoot":""}