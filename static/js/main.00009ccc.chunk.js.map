{"version":3,"sources":["hoc/withAuthRedirect.js","redux/dialogs-reducer.js","components/common/Preloader/Preloader.module.scss","components/Profile/ProfileInfo/ProfileInfo.module.scss","components/Profile/MyPosts/Post/Post.module.scss","assets/Ava.png","reportWebVitals.js","components/Sidebar/Friends/Friend/Friend.js","components/Sidebar/Friends/Friends.js","components/Sidebar/Sidebar.js","components/News/News.js","components/Music/Music.js","components/Settings/Settings.js","api/api.js","redux/users-reducer.js","components/Users/Paginator.js","components/Users/Users.js","assets/preloader.svg","components/common/Preloader/Preloader.js","redux/user-selectors.js","components/Users/UsersContainer.js","assets/BC.png","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfo.js","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","redux/auth-reducer.js","assets/logo.svg","components/Header/Header.js","components/Header/HeaderContainer.js","components/login/login.js","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","hoc/withSuspence.js","index.js","components/Sidebar/Sidebar.module.scss","components/login/login.module.scss","components/Profile/MyPosts/MyPosts.module.scss","components/Sidebar/Friends/Friends.module.scss","components/Users/Users.module.scss","components/Header/Header.module.scss","components/Sidebar/Friends/Friend/Friend.module.scss","components/Profile/Profile.module.scss"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","ADD_MESSAGE","initialState","contactData","id","name","avatar","Ava","messageData","text","addMessageActionCreator","messageText","type","dialogsReducer","action","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Friend","className","s","friend","friendImage","src","alt","surname","Friends","friendsElements","friends","map","friendsWrapper","friendsTitle","sidebar","nav","activeClassName","active","exact","News","style","backgroundColor","width","height","Music","Settings","axiosInstance","axios","baseURL","withCredentials","headers","usersAPI","currentPage","pageSize","get","responce","data","userId","delete","post","email","password","rememberMe","captcha","profileAPI","statusText","put","status","FOLLOW","UNFOLLOW","SET_USERS","SET_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","portionSize","isFetching","followingInProgress","unfollow","userID","setPage","setTotalUsersCount","toggleIsFetching","toggleFollowingProgress","usersReducer","u","followed","filter","Paginator","changeCurrentPage","styles","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagCont","pagBtn","onClick","page","selectedPage","Users","main","photo","photos","small","disabled","some","unfollowThunkCreator","followThunkCreator","Preloader","preloader","getUsers","usersPage","getPageSize","getTotalUsersCount","getPortionSize","getCurrentPage","getIsFetching","getFollowingInProgress","UsersComponent","getUsersThunkCreator","actionCreators","dispatch","totalCount","items","resultCode","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onChange","element","currentTarget","value","changeUserStatusThunkCreator","myId","ProfileInfo","profile","author","large","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","setUserStatus","contacts","facebook","github","instagram","mainLink","twitter","vk","website","youtube","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","postData","message","likesCounter","typedStatus","profileReducer","postText","p","postId","Post","MyPosts","memo","postElements","posts","addPost","postList","PostForm","validationSchema","yup","shape","newPost","required","initialValues","onSubmit","values","resetForm","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","writeMessage","placeholder","onBlur","error","MyPostsContainer","profilePage","newPostText","addPostActionCreator","Profile","background","backgroundImage","Background","ProfileContainer","match","params","getUserProfileThunkCreator","getUserStatusThunkCreator","a","compose","withRouter","SET_USER_DATA","SET_ERROR_MESSAGE","SET_CAPTCHA_URL","login","captchaUrl","errorMessage","setAuthUserData","setErrorMessage","authUserThunkCreator","authReducer","Header","header","logo","Logo","loginBlock","logoutUserThunkCreator","HeaderContainer","LoginForm","typeError","min","loginWrapper","remember","validateOnBlur","loginUserThunkCreator","loginForm","success","htmlFor","messages","url","SET_INITIALIZED","initialized","appReducer","sidebarReducer","reducers","combineReducers","messagesPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","App","initialize","path","render","Suspense","fallback","UsersContainer","component","promise","Promise","all","AppContainer","MyApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.00009ccc.chunk.js","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedRedirectComponent;\n}","import Ava from '../assets/Ava.png'\r\n\r\nconst ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    contactData: [\r\n        {id: 1, name: 'Alex', avatar: Ava},\r\n        {id: 2, name: 'Doodie', avatar: Ava},\r\n        {id: 3, name: 'Moodie', avatar: Ava},\r\n        {id: 4, name: 'John', avatar: Ava},\r\n        {id: 5, name: 'Doe', avatar: Ava}\r\n    ],\r\n    messageData: [\r\n        {id: 1, text: 'Sup homie! How are you doing with ur react stuff? Are u done for today?'},\r\n        {id: 2, text: 'Ain\\'t ya doing ur app or smth?'},\r\n        {id: 3, text: 'Wanna drink this evening?'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageData: [...state.messageData, {id: 5, text: action.messageText}]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageActionCreator = (messageText) => ({type: ADD_MESSAGE, messageText})\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__CNKtc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"author\":\"ProfileInfo_author__-XgLT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1jere\"};","export default __webpack_public_path__ + \"static/media/Ava.5d85ca03.png\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Friend.module.scss'\r\n\r\nconst Friend = (props) => {\r\n\r\n    return (\r\n        <div id={props.id} className={s.friend}>\r\n            <img className={s.friendImage} src={props.avatar} alt=\"Ava\"/>\r\n            {props.name}<br/>{props.surname}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend","import React from 'react';\r\nimport s from './Friends.module.scss'\r\nimport Friend from \"./Friend/Friend\";\r\n\r\nconst Friends = (props) => {\r\n\r\n    let friendsElements = props.friends.map( friend =>\r\n        <Friend key={friend.id} id={friend.id} avatar={friend.avatar} name={friend.name} surname={friend.surname}/>)\r\n\r\n    return (\r\n        <div className={s.friendsWrapper}>\r\n            <span className={s.friendsTitle}>Friends</span>\r\n            <div className={s.friends}>\r\n                { friendsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from 'react';\r\nimport s from './Sidebar.module.scss'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Sidebar = (props) => {\r\n    return (\r\n        <aside className={s.nav}>\r\n            <nav>\r\n                <NavLink activeClassName = {s.active} exact to=\"/\">Profile</NavLink>\r\n                <NavLink activeClassName = {s.active} to=\"/dialogs\">Dialogs</NavLink>\r\n                <NavLink activeClassName = {s.active} to=\"/users\">Users</NavLink>\r\n                <NavLink activeClassName = {s.active} to=\"/news\">News</NavLink>\r\n                <NavLink activeClassName = {s.active} to=\"/music\">Music</NavLink>\r\n                <NavLink activeClassName = {s.active} to=\"/settings\">Settings</NavLink>\r\n            </nav>\r\n            <Friends friends={props.friends}/>\r\n        </aside>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        friends: state.sidebar.friends\r\n    })\r\n}\r\n\r\nconst actionCreators = null\r\n\r\nexport default connect(mapStateToProps, actionCreators)(Sidebar);","import React from 'react'\r\n// import s from './News.module.scss'\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div style={{backgroundColor: 'blue', width: '100%', height: '100%' }}>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News","import React from 'react'\r\n// import s from './Music.module.scss'\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div style={{backgroundColor: 'green', width: '100%', height: '100%' }}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music","import React from 'react'\r\n// import s from './Settings.module.scss'\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div style={{backgroundColor: 'yellow', width: '100%', height: '100%' }}>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import * as axios from 'axios'\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: { \"API-KEY\": \"9138b932-6739-4fbe-9f9b-99075b9836f5\" }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return(\n            axiosInstance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(responce => responce.data)\n        )\n    },\n    unfollowUser(userId) {\n        return(\n            axiosInstance.delete(`follow/${userId}`)\n            .then(responce => responce.data)\n        )\n    },\n\n    followUser(userId) {\n        return(\n            axiosInstance.post(`follow/${userId}`)\n            .then(responce => responce.data)\n        )\n    },\n    authUser(){\n        return(\n            axiosInstance.get(`auth/me`)\n            .then(responce => responce.data)\n        )\n    },\n    loginUser(email, password, rememberMe, captcha){\n        return(\n            axiosInstance.post(`auth/login/`, { email, password, rememberMe, captcha })\n            .then(responce => responce.data)\n        )\n    },\n    logoutUser(){\n        return(\n            axiosInstance.delete(`auth/login/`)\n        )\n    },\n    getCaptcha(){\n        return(\n            axiosInstance.get(`security/get-captcha-url`)\n            .then(responce => responce.data)\n        )\n    }\n}\nexport const profileAPI = {\n    getUserProfile(userId){\n        return(\n            axiosInstance.get(`profile/${userId}`)\n            .then(responce => responce.data)\n        )\n    },\n    getStatus(userId){\n        return(\n            axiosInstance.get(`profile/status/${userId}`)\n            .then(responce => responce.data)\n        )\n    },\n    changeStatus(statusText){\n        return(\n            axiosInstance.put(`profile/status/`, { status: statusText })\n            .then(responce => responce.data)\n        )\n    }\n}","import { usersAPI } from '../api/api'\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_PAGE = 'SET_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\n// const SET_PORTION_SIZE = 'SET_PORTION_SIZE'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 21,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    portionSize: 10,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return { ...u, followed: true }\r\n                    } else {\r\n                        return u;\r\n                    }\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return { ...u, followed: false }\r\n                    } else {\r\n                        return u;\r\n                    }\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.totalUsersCount\r\n            }\r\n        // case SET_PORTION_SIZE:\r\n        //     return {\r\n        //         ...state,\r\n        //         portionSize: action.portionSize\r\n        //     }    \r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const follow = (userID) => ({ type: FOLLOW, userID })\r\nexport const unfollow = (userID) => ({ type: UNFOLLOW, userID })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setPage = (currentPage) => ({ type: SET_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount })\r\n// export const setPortionSize = (portionSize) => ({ type: SET_PORTION_SIZE, portionSize })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (followingInProgress, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, followingInProgress, userId })\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    usersAPI.getUsers(currentPage, pageSize)\r\n    .then(responce => {\r\n        dispatch(setTotalUsersCount(responce.totalCount))\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(responce.items))\r\n        dispatch(setPage(currentPage))\r\n    })\r\n}\r\nexport const followThunkCreator = (userId) => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    usersAPI.followUser(userId)\r\n    .then(responce => {\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n        if (responce.resultCode === 0) {\r\n            dispatch(follow(userId))\r\n        }\r\n    })\r\n}\r\n\r\nexport const unfollowThunkCreator = (userId) => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    usersAPI.unfollowUser(userId)\r\n    .then(responce => {\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n        if (responce.resultCode === 0) {\r\n            dispatch(unfollow(userId))\r\n        }\r\n    })\r\n}\r\n\r\nexport default usersReducer","import { useState } from \"react\";\n\nlet Paginator = ({ totalUsersCount, pageSize, changeCurrentPage, currentPage, portionSize, styles }) => {\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n    let portionCount = pagesCount / portionSize\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n    return (\n        <div className={styles.pagCont}>\n            { portionNumber > 1 && <button className={styles.pagBtn} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n            {pages\n                .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber)\n                .map(page => {\n                    return (\n                        <span\n                            key={page}\n                            onClick={() => { changeCurrentPage(page) }}\n                            className={(currentPage === page) ? `${styles.selectedPage} ${styles.pagBtn}` : `${styles.pagBtn}`}>{page}\n                        </span>\n                    )\n                })}\n            { portionNumber < portionCount && <button className={styles.pagBtn} onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n        </div>\n    )\n}\n\nexport default Paginator","import React from 'react'\nimport s from './Users.module.scss'\nimport Ava from \"../../assets/Ava.png\";\nimport { NavLink } from 'react-router-dom';\nimport Paginator from  './Paginator'\n\nlet Users = (props) => {\n\n    return (\n        (\n            <div>\n                <Paginator \n                    totalUsersCount={props.totalUsersCount} \n                    pageSize={props.pageSize} \n                    changeCurrentPage={props.changeCurrentPage} \n                    currentPage={props.currentPage} \n                    portionSize={props.portionSize} \n                    styles={s} \n                />\n\n                <div className={s.main}>\n                    {\n                        props.users.map(u => <div key={u.id}>\n                            <span>\n                                <div>\n                                    <NavLink to={'/profile/' + u.id + '/'}>\n                                        <img className={s.photo} src={u.photos.small !== null ? u.photos.small : Ava} alt='avatar' />\n                                    </NavLink>\n                                </div>\n                            </span>\n                            <span>\n                                {u.followed\n                                    ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                                        props.unfollowThunkCreator(u.id)\n                                    }}>Unfollow</button>\n                                    : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                                        props.followThunkCreator(u.id)\n                                    }}>Follow</button>}\n                            </span>\n                            <span>\n                                <span>\n                                    <div>{u.name}</div>\n                                    <div>{u.status}</div>\n                                </span>\n                                <span>\n                                    <div>Russia</div>\n                                    <div>Moscow</div>\n                                </span>\n                            </span>\n                        </div>)\n                    }\n                </div>\n            </div>\n        )\n    )\n}\n\nexport default Users","export default __webpack_public_path__ + \"static/media/preloader.7e45af41.svg\";","import React from 'react'\nimport s from './Preloader.module.scss'\nimport preloader from '../../../assets/preloader.svg'\n\nlet Preloader = () => {\n    return (\n        <img className={s.preloader} src={preloader} alt=\"preloader\"/>\n    )\n}\n\nexport default Preloader","export const getUsers = (state) => {\n    return state.usersPage.users\n}\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getPortionSize = (state) => {\n    return state.usersPage.portionSize\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress\n}\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {unfollow, setPage, setTotalUsersCount, getUsersThunkCreator, followThunkCreator, unfollowThunkCreator} from \"../../redux/users-reducer\";\r\nimport Users from './Users'\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getPortionSize} from '../../redux/user-selectors'\r\n\r\n\r\nclass UsersComponent extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize)\r\n    }\r\n    changeCurrentPage = (page) => {\r\n        this.props.getUsersThunkCreator(page, this.props.pageSize)\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    portionSize={this.props.portionSize}\r\n                    currentPage={this.props.currentPage}\r\n                    users={this.props.users}\r\n                    changeCurrentPage={this.changeCurrentPage}\r\n                    unfollow={this.props.unfollow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    followThunkCreator={this.props.followThunkCreator}\r\n                    unfollowThunkCreator={this.props.unfollowThunkCreator}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        portionSize: getPortionSize(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nlet actionCreators = {unfollow, setPage, setTotalUsersCount, getUsersThunkCreator, followThunkCreator, unfollowThunkCreator}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(UsersComponent);","export default __webpack_public_path__ + \"static/media/BC.8041bfd8.png\";","import React, {useState, useEffect} from 'react'\n//import s from './ProfileStatus.module.scss'\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status] )\n\n    const toggleEdit = () => {\n        setEditMode(true)\n    }\n\n    const unToggleEdit = () => {\n        setEditMode(false)\n        props.changeUserStatusThunkCreator(status)\n    }\n\n    const onStatusInputChange = (element) => {\n        setStatus(element.currentTarget.value)\n    }\n\n    if(editMode){\n        return (\n            <>\n                <div>\n                    <input \n                        type=\"text\" \n                        onChange={ onStatusInputChange } \n                        value={status}\n                    />\n                    \n                    <button onClick={unToggleEdit}>Сохранить</button>\n                </div>\n            </>\n        )\n    } else {\n        return (\n            <>\n                <div><span>{props.status}</span></div>\n                { ( (props.userId === props.myId) && (props.isAuth) ) ? <div><button onClick={toggleEdit}>Редактировать</button></div> : null }\n            </>\n        ) \n    }\n}\n\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.scss'\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile) {\r\n        return(\r\n            <Preloader/>\r\n        )\r\n    }\r\n\r\n    return (\r\n            <div className={s.author}>\r\n                <img src={props.profile.photos.large} alt=\"Avatar\"/>\r\n                <span>\r\n                        {props.profile.fullName}\r\n                        <p>{props.profile.aboutMe}</p>\r\n                        <p>{(props.profile.lookingForAJob) ? 'Ищу работу' : 'Не ищу работу'}</p>\r\n                        <p>{props.profile.lookingForAJobDescription}</p>\r\n                </span>\r\n\r\n                <span>\r\n                    <ProfileStatusWithHooks\r\n                        status={props.status}\r\n                        userId={props.userId}\r\n                        isAuth={props.isAuth}\r\n                        myId={props.myId}\r\n                        setUserStatus={props.setUserStatus}\r\n                        changeUserStatusThunkCreator={props.changeUserStatusThunkCreator}\r\n                    />\r\n                </span>\r\n                \r\n                <span>\r\n                    Контакты:\r\n                    {(props.profile.contacts.facebook) ? <p>Facebook: {props.profile.contacts.facebook}</p> : null }\r\n                    {(props.profile.contacts.github) ? <p>GitHub: {props.profile.contacts.github}</p> : null }\r\n                    {(props.profile.contacts.instagram) ? <p>Instagram: {props.profile.contacts.instagram}</p> : null }\r\n                    {(props.profile.contacts.mainLink) ? <p>Link: {props.profile.contacts.mainLink}</p> : null }\r\n                    {(props.profile.contacts.twitter) ? <p>Twitter: {props.profile.contacts.twitter}</p> : null }\r\n                    {(props.profile.contacts.vk) ? <p>VK: {props.profile.contacts.vk}</p> : null }\r\n                    {(props.profile.contacts.website) ? <p>Website: {props.profile.contacts.website}</p> : null }\r\n                    {(props.profile.contacts.youtube) ? <p>Youtube: {props.profile.contacts.youtube}</p> : null }\r\n                </span>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import { profileAPI } from '../api/api'\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst DELETE_POST = 'DELETE-POST'\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_STATUS = 'CHANGE-STATUS'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'Whassaup homie!', likesCounter: 25},\r\n        {id: 2, message: 'Hawaya doin here?', likesCounter: 10},\r\n        {id: 3, message: 'Exdee git rect', likesCounter: 6}\r\n    ],\r\n    profile: null,\r\n    status: '',\r\n    isFetching: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData, { id: 4, message: action.postText, likesCounter: 0 }]\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [...state.postData.filter(p => p.id !== action.postId)]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.typedStatus\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (postText) => ({type: ADD_POST, postText})\r\nexport const deletePostActionCreator = (postId) => ({type: DELETE_POST, postId})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setUserStatus = (typedStatus) => ({type: SET_STATUS, typedStatus})\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\n\r\n\r\nexport const getUserProfileThunkCreator = (userId) => (dispatch) => {\r\n    profileAPI.getUserProfile(userId).then(responce => {\r\n        dispatch(setUserProfile(responce));\r\n    })\r\n}\r\nexport const getUserStatusThunkCreator = (userId) => async (dispatch) => {\r\n    let responce = await profileAPI.getStatus(userId)\r\n        dispatch(setUserStatus(responce))\r\n}\r\nexport const changeUserStatusThunkCreator = (statusText) => (dispatch) => {\r\n    profileAPI.changeStatus(statusText)\r\n        .then(responce => {\r\n            if (responce.resultCode === 0) {\r\n                dispatch(setUserStatus(statusText))\r\n            }\r\n        })\r\n}\r\nexport default profileReducer","import React from 'react';\r\nimport s from './Post.module.scss'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src={props.avatar} alt=\"Avatar\"/>\r\n            <div>{props.message}</div>\r\n            <span>{props.likesCounter} Likes</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.scss'\r\nimport Post from \"./Post/Post\";\r\nimport Ava from \"../../../assets/Ava.png\";\r\nimport { Formik } from 'formik'\r\nimport * as yup from 'yup'\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElements = props.postData.map(post => <Post key={post.id} id={post.id} avatar={Ava} message={post.message} likesCounter={post.likesCounter} />)\r\n    return (\r\n        <div className={s.posts}>\r\n            <h2>My Posts</h2>\r\n\r\n            <PostForm addPost={props.addPost} />\r\n\r\n            <div className={s.postList}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst PostForm = (props) => {\r\n    let onAddPost = (postText) => {\r\n        props.addPost(postText)\r\n    }\r\n    const validationSchema = yup.object().shape({\r\n        newPost: yup.string().required('First type your post\\'s text'),\r\n    })\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                newPost: ''\r\n            }}\r\n            onSubmit={(values, { resetForm }) => {\r\n                onAddPost(values.newPost)\r\n                resetForm({ values: '' })\r\n            }}\r\n            validationSchema={validationSchema}\r\n        >\r\n            {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\r\n                <form className={s.writeMessage}>\r\n                    <textarea\r\n                        placeholder='Type your post...'\r\n                        name={\"newPost\"}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.newPost}\r\n                    />\r\n\r\n                    <button\r\n                        disabled={!isValid && !dirty}\r\n                        onClick={handleSubmit}\r\n                        type={'submit'}\r\n                    >Add Post\r\n                    </button>\r\n\r\n                    {touched.newPost && errors.newPost && <p className={s.error}>{errors.newPost}</p>}\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.postData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {\r\n            dispatch(addPostActionCreator(postText));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport s from './Profile.module.scss'\r\nimport Background from \"../../assets/BC.png\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <main className={s.profile}>\r\n            <div className={s.background} style={{backgroundImage: \"url(\" + Background + \")\"}}/>\r\n\r\n            <ProfileInfo \r\n                profile={props.profile} \r\n                status={props.status} \r\n                isAuth={props.isAuth} \r\n                userId={props.userId}\r\n                myId={props.myId}\r\n                setUserStatus={props.setUserStatus}\r\n                changeUserStatusThunkCreator={props.changeUserStatusThunkCreator}\r\n            />\r\n            \r\n            <MyPostsContainer/>\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from './Profile'\r\nimport {connect} from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {getUserProfileThunkCreator, getUserStatusThunkCreator, changeUserStatusThunkCreator, setUserStatus} from '../../redux/profile-reducer'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) { \r\n            userId = this.props.id;\r\n        }\r\n        this.props.getUserProfileThunkCreator(userId);\r\n        this.props.getUserStatusThunkCreator(userId);\r\n    }\r\n    render(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) { \r\n            userId = this.props.id;\r\n        }\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Profile \r\n                    { ...this.props }\r\n                    userId={userId}\r\n                    myId={this.props.id}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        id: state.auth.id\r\n    }\r\n}\r\n\r\nlet actionCreators = {getUserProfileThunkCreator, getUserStatusThunkCreator, changeUserStatusThunkCreator, setUserStatus}\r\n\r\nexport default compose(withRouter, connect(mapStateToProps, actionCreators), withAuthRedirect)(ProfileContainer)","import { usersAPI } from '../api/api'\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA'\r\nconst SET_ERROR_MESSAGE = 'SET-ERROR-MESSAGE'\r\nconst SET_CAPTCHA_URL = 'SET-CAPTCHA-URL'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    captchaUrl: '',\r\n    isAuth: false,\r\n    isFetching: false,\r\n    errorMessage: ''\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case SET_ERROR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.errorMessage\r\n            } \r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            }   \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, login, email, isAuth) => ({type: SET_USER_DATA, data: {id, login, email, isAuth} })\r\nexport const setErrorMessage = (errorMessage) => ({type: SET_ERROR_MESSAGE, errorMessage})\r\nexport const setCaptchaUrl = (captchaUrl) => ({type: SET_CAPTCHA_URL, captchaUrl})\r\n\r\nexport const authUserThunkCreator = () => (dispatch) => {\r\n    return usersAPI.authUser()\r\n    .then(responce => {\r\n        if(responce.resultCode === 0) {\r\n            let {id, login, email} = responce.data\r\n            dispatch(setAuthUserData(id, login, email, true))\r\n        }\r\n    }) \r\n}\r\nexport const loginUserThunkCreator = (email, password, rememberMe, captcha) => (dispatch) => {\r\n    usersAPI.loginUser(email, password, rememberMe, captcha)\r\n    .then(responce => {\r\n        if (responce.resultCode === 1) {\r\n            dispatch(setErrorMessage(responce.messages))\r\n        } else if (responce.resultCode === 10) {\r\n            dispatch(setErrorMessage(responce.messages))\r\n            usersAPI.getCaptcha()\r\n            .then(responce => {\r\n                dispatch(setCaptchaUrl(responce.url))\r\n            })\r\n        } else if (responce.resultCode === 0) {\r\n            dispatch(setErrorMessage(\"Logged Successful!\"))\r\n            dispatch(authUserThunkCreator())\r\n        }\r\n    })\r\n}\r\nexport const logoutUserThunkCreator = () => (dispatch) => {\r\n    usersAPI.logoutUser()\r\n    .then(responce => {\r\n        if(responce.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n            dispatch(setErrorMessage(\"\"))\r\n        }\r\n    })\r\n}\r\n\r\nexport default authReducer","export default __webpack_public_path__ + \"static/media/logo.a797d364.svg\";","import React from 'react';\r\nimport s from './Header.module.scss'\r\nimport Logo from \"../../assets/logo.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className = {s.header}>\r\n            <div className = {s.logo}>\r\n                <img src={Logo} alt='Logo'/>\r\n                <span>Another React App</span>\r\n            </div>\r\n            <div className={s.loginBlock}>\r\n                {(props.isAuth) \r\n                    ? <div>{props.login + ' ' + props.email}<button onClick={props.logoutUserThunkCreator}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUserThunkCreator} from '../../redux/auth-reducer'\r\nimport Header from \"./Header\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render(){\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        email: state.auth.email,\r\n        isFetching: state.auth.isFetching,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nlet actionCreators = {logoutUserThunkCreator}\r\n\r\nexport default connect(mapStateToProps, actionCreators)(HeaderContainer);","import React from 'react'\nimport { Formik } from 'formik';\nimport * as yup from 'yup'\nimport s from './login.module.scss'\nimport { loginUserThunkCreator } from \"../../redux/auth-reducer\";\nimport {connect} from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\n\n\nconst Login = (props) => {\n    if (props.isAuth) {\n        return <Redirect to ={\"/profile\"}/>\n    } else {\n        return (\n            <div className={s.loginWrapper}>\n                <h1>You need to login first:</h1>\n                <LoginForm \n                    loginUserThunkCreator={props.loginUserThunkCreator} \n                    errorMessage={props.errorMessage}\n                    captchaUrl={props.captchaUrl}\n                />\n            </div>\n        )\n    }\n}\n\nconst LoginForm = (props) => {\n    const validationSchema = yup.object().shape({\n        email: yup.string().email('Valid email is required'),\n        password: yup.string().typeError('Must be string').required('Password is required').min(3, 'Password must be more than 3 symbols')\n    })\n    return(\n        <div className={s.loginWrapper}>\n            <Formik\n            initialValues={{\n                email: '',\n                password: '',\n                remember: false,\n                captcha: ''\n            }}\n            validateOnBlur\n            onSubmit={(values) => {\n                props.loginUserThunkCreator(values.email, values.password, values.remember, values.captcha)\n            }}\n            validationSchema={validationSchema}\n        >\n            {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => (\n                <div className={s.loginForm}>\n                    {props.errorMessage && <p className={(props.errorMessage === \"Logged Successful!\") ? s.success : s.error}>{props.errorMessage}</p>}\n                    \n                    <label htmlFor={\"email\"}>Email</label>\n                    <input\n                        type={\"text\"}\n                        name={\"email\"}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.email}\n                    />\n                    {touched.email && errors.email && <p className={s.error}>{errors.email}</p>}\n\n                    <label htmlFor={\"password\"}>Password</label>\n                    <input\n                        type={\"password\"}\n                        name={\"password\"}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        value={values.password}\n                    />\n                    {touched.password && errors.password && <p className={s.error}>{errors.password}</p>}\n\n                    <label htmlFor={\"remember\"}>Remember me\n                        <input\n                            type={\"checkbox\"}\n                            name={\"remember\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.remember}\n                        />\n                    </label>\n\n                    {\n                    props.captchaUrl && \n                        <label htmlFor={\"captcha\"}>Captcha\n                        <input\n                            type={\"text\"}\n                            name={\"captcha\"}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.captcha}\n                        />\n                        <img src={props.captchaUrl} alt=\"captcha\"/>\n                        </label>\n                    }\n\n                    <button\n                        disabled={!isValid && !dirty}\n                        onClick={handleSubmit}\n                        type={'submit'}\n                    >Отправить\n                    </button>\n                </div>\n            )}\n        </Formik>\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        errorMessage: state.auth.errorMessage,\n        captchaUrl: state.auth.captchaUrl,\n        isAuth: state.auth.isAuth\n    }\n}\n\nlet actionCreators = {loginUserThunkCreator}\n\nexport default connect(mapStateToProps, actionCreators)(Login);\n\n","import {authUserThunkCreator} from './auth-reducer'\r\n\r\nconst SET_INITIALIZED = 'SET-INITIALIZED'\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitialized = () => ({type: SET_INITIALIZED})\r\n\r\nexport const initialize = () => (dispatch) => {\r\n    let promise = dispatch(authUserThunkCreator());\r\n    Promise.all([promise])\r\n        .then (() => {\r\n            dispatch(setInitialized())\r\n        })\r\n}\r\n\r\nexport default appReducer","import Ava from \"../assets/Ava.png\";\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {id: 1, name: 'Viktor', surname: 'Doodiev', avatar: Ava },\r\n        {id: 2, name: 'Piter', surname: 'Parker', avatar: Ava },\r\n        {id: 3, name: 'Woodie', surname: 'Bamboozle', avatar: Ava },\r\n        {id: 4, name: 'Vlad', surname: 'Goonie', avatar: Ava },\r\n        {id: 5, name: 'Josef', surname: 'Tiki', avatar: Ava }\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    messagesPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store","import React from 'react';\nimport './App.scss';\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport { Route } from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/login/login'\nimport { connect } from \"react-redux\";\nimport { initialize } from '../src/redux/app-reducer'\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from './redux/redux-store';\n//import { BrowserRouter } from \"react-router-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { withSuspence } from \"./hoc/withSuspence\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initialize();\n    }\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer />\n                <Sidebar />\n                <div className=\"app-wrapper-content\">\n                    <Route exact path=\"/\" render={() => <ProfileContainer />} />\n                    <Route path=\"/login\" render={() => <Login />} />\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n                    <Route path=\"/dialogs\" render={withSuspence(DialogsContainer)}/>\n                    <Route path=\"/users\" render={() => <UsersContainer />} />\n                    <Route path=\"/news\" component={News} />\n                    <Route path=\"/music\" component={Music} />\n                    <Route path=\"/settings\" component={Settings} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized,\n    }\n}\nconst actionCreators = { initialize }\nconst AppContainer =  connect(mapStateToProps, actionCreators)(App);\nconst MyApp = (props) => {\n    return(\n        \n        <HashRouter>\n        {/* <BrowserRouter basename={process.env.PUBLIC_URL}> */}\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        {/* </BrowserRouter> */}\n        </HashRouter>\n    )\n}\n\nexport default MyApp","import React from 'react'\n\nexport const withSuspence = (Component) => {\n    return(props) => {\n        return <React.Suspense fallback={<div>Loading...</div>}><Component {...props}/></React.Suspense>\n        \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport MyApp from './App';\nimport './index.css';\n\n\n\nReactDOM.render( <MyApp/>, document.getElementById('root') );\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Sidebar_nav__18KQo\",\"active\":\"Sidebar_active__9wFJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginWrapper\":\"login_loginWrapper__3Ulem\",\"loginForm\":\"login_loginForm__1UFcn\",\"error\":\"login_error__I4I2E\",\"success\":\"login_success__z5dWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__1P0sL\",\"postList\":\"MyPosts_postList__Eg7wY\",\"error\":\"MyPosts_error__8ySYA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsWrapper\":\"Friends_friendsWrapper__2Lr-y\",\"friends\":\"Friends_friends__3Ibbc\",\"friendsTitle\":\"Friends_friendsTitle__2rBWY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Users_main__27bUd\",\"photo\":\"Users_photo__1H5VH\",\"pagBtn\":\"Users_pagBtn__1EMuU\",\"selectedPage\":\"Users_selectedPage__16HiA\",\"pagCont\":\"Users_pagCont__3TX8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"logo\":\"Header_logo__3T0lc\",\"loginBlock\":\"Header_loginBlock__3g_eP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2Xct_\",\"friendImage\":\"Friend_friendImage__1Dnuv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__15I9R\",\"background\":\"Profile_background__2Vxu8\"};"],"sourceRoot":""}